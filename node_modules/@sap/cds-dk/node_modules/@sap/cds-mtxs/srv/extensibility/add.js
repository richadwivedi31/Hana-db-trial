const cds = require('@sap/cds/lib')
const LOG = cds.log('mtx')

const { validateExtension } = require('./validation')
const handleDefaults = require('./defaults')
const activateExt = require('./activate')

const _isCSN = str => str.substring(0, 1) === '{'

const add = async function (req) {
  let { extension, tag, activate } = req.data
  if (!req.user.is('internal-user') && req.data.tenant && req.data.tenant !== req.tenant) 
    req.reject(403, `No permission to add extensions to tenants other than ${req.tenant}`)
  const tenant = (req.user.is('internal-user') && req.data.tenant) || req.tenant || ''
  if (tenant) cds.context = { tenant }
  
  if (!extension) req.reject(400, 'Missing extension')
  const length = typeof extension === 'string' ? extension.length : Object.keys(extension).length
  if (!length) req.reject(400, 'Missing extension')
  if (!activate) activate = 'database'
  if (!tag) tag = null
  
  const extCsn = typeof extension === 'string' 
    ? _isCSN(extension) ? JSON.parse(extension) : cds.parse.cdl(extension)
    : extension
  if (extCsn.requires) delete extCsn.requires

  LOG.info(`validating extension '${tag}' ...`)
  const { 'cds.xt.ModelProviderService': mps } = cds.services
  const csn = await mps.getCsn(tenant, ['*'])
  validateExtension(extCsn, csn, req)

  if (tenant) cds.context = { tenant }
  const ID = cds.utils.uuid()
  await cds.db.run(
    INSERT.into('cds.xt.Extensions').entries([{ ID, tag, csn: JSON.stringify(extCsn), activated: activate }])
  )
  const njCsn = cds.compile.for.nodejs(csn)
  LOG.info(`activating extension to '${activate}' ...`)
  if (activate === 'propertyBag' && extCsn.extensions)
    extCsn.extensions.forEach(async ext => await handleDefaults(ext, njCsn))
  if (activate === 'database') await activateExt(ID, tag, tenant)
}

const promote = async function (req) {
  let { tag, activate } = req.data
  if (!req.user.is('internal-user') && req.data.tenant && req.data.tenant !== req.tenant) 
    req.reject(403, `No permission to promote extensions by tenants other than ${req.tenant}`)
    const tenant = (req.user.is('internal-user') && req.data.tenant) || req.tenant || ''
  if (tenant) cds.context = { tenant }

  if (!activate) activate = 'database'
  if (!tag) tag = null  
  if (activate !== 'database') req.reject(400, 'Promote to propertyBag is not supported')

  if (tenant) cds.context = { tenant }
  await activateExt(null, tag, tenant)
}

module.exports = { add, promote }
