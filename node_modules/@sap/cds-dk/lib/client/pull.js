const cds = require ('../cds')
const { local, tar } = cds.utils;

const fs = require('fs');
const { join } = require('path');
const axios = require('axios');

const { login } = require('./auth_manager');
const BaseCommand = require('./base_command');
const { CliError } = require('./helper/errors');

module.exports = class Pull extends BaseCommand {

    static async run(paramValues) {
        if (!tar) {
            throw new CliError(`cds pull requires @sap/cds version >= 6.2. Current version is ${cds.version}\n`);
        }

        const params = await login(paramValues);
        const url = params.get('appUrl')
        const home = params.get('projectFolder');
        const target = join(home, 'node_modules', this.getAppPackageName(home));
        const subdomain = params.get('subdomain') // REVISIT: Why are subdomains not transparently encoded in URLs?
        console.log(`Pulling app base model`, Object.assign({ from: url, to: local(target) }, subdomain && {subdomain}))

        fs.rmSync(target, { force: true, recursive: true });
        fs.mkdirSync(target, { recursive: true });

        const baseModelTgz = await this.getTgz(params);
        return tar.xz(baseModelTgz).to(target);
    }

    static getAppPackageName(projectFolder) {
        const env = cds.env.for('cds', projectFolder);
        return env.extends || '_base';
    }

    static async getTgz(params) {
        const pullUrl = `${(params.get('appUrl'))}/-/cds/extensibility/pull`;
        const options = { ...params.get('reqAuth'), responseType: 'arraybuffer' };

        return axios.post(pullUrl, {}, options)
            .then(response => Buffer.from(response.data))
            .catch(error => this.handleHttpError(error, params, { url: pullUrl }));
    }
}
