const { join } = require('path');
const { exists } = require('../../../cds').utils
const { copyFiles } = require('../../util/templateUtil')
const ProjectReader = require('../../util/projectReader');

module.exports = class MtaTemplate extends require('../templateBase') {
    constructor(projectPath, generator) {
        super(projectPath, generator, __dirname);
        this.projectReader = new ProjectReader(projectPath);
    }

    static hasFacet(_, projectPath, options) {
        if (!options?.add.has('mta') && options?.add.has('helm')) return false
        return exists(join(projectPath, 'mta.yaml'))
    }

    async run() {
        const projectDescriptor = await this.projectReader.read()
        if (!exists(join(this.projectPath, 'mta.yaml'))) {
            await copyFiles(join(__dirname, 'files'), this.projectPath, projectDescriptor);
        }

        // Re-applying the dependent merging part of other facets if necessary.
        const dependentFacets = ['approuter', 'hana', 'xsuaa', 'multitenancy', 'extensibility', 'enterprise-messaging']
        for (const facet of dependentFacets) {
            const Template = require('../'+facet)
            const template = new Template(this.projectPath, this.generator)
            if (Template.hasFacet(await this.getEnv(), this.projectPath, this.options)) await template.runDependentMerging()
        }
    }
}
