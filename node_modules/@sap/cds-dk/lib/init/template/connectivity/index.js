const { join } = require('path')
const ProjectReader = require('../../util/projectReader')
const { mergeYAML } = require('../../util/merge')
const { copyAndTrack, parseMd5File, writeMd5File } = require('../../util/md5Tracking')

module.exports = class ConnectivityTemplate extends require('../templateBase') {
    constructor(projectPath, generator) {
        super(projectPath, generator, __dirname)
        this.projectReader = new ProjectReader(projectPath)
    }

    async run() {
        await this.runDependentMerging()
    }

    async runDependentMerging(context = {}) {
        const projectDescriptor = await this.projectReader.read(this.options)
        const { hasHelm } = projectDescriptor.cap

        if (hasHelm) {
            //in case facet is being added to the already exisiting charts folder
            let isIndependentCommand = false
            if(Object.keys(context).length == 0){
                isIndependentCommand = true
                context.projectPath = this.projectPath
                context.oldTrackingData = context.newTrackingData = await parseMd5File(join(this.projectPath, 'chart', '.cds-add-helm-files.md5'))
            }

            await mergeYAML(
                join(this.projectPath, 'chart', 'values.yaml'),
                join(__dirname, 'files', 'values.yaml.hbs'),
                projectDescriptor,
                { additions: [{
                    ref: `srv-additional-volumes`,
                    in: `srv.additionalVolumes`,
                    where: [{
                        property: 'name',
                        isEqualTo: 'connectivity-secret'
                    }]
                }]}
            )
            const filesPath = join(__dirname, 'files')
            const templatesPath = join(this.projectPath, 'chart', 'templates')
            await copyAndTrack(join(filesPath, 'connectivity-binding.yaml'), join(templatesPath, 'connectivity-binding.yaml'), context)
            await copyAndTrack(join(filesPath, 'connectivity-proxy-info.yaml'), join(templatesPath, 'connectivity-proxy-info.yaml'), context)
            await copyAndTrack(join(filesPath, 'connectivity.yaml'), join(templatesPath, 'connectivity.yaml'), context)
            if(isIndependentCommand) await writeMd5File(join(this.projectPath, 'chart', '.cds-add-helm-files.md5'), context.newTrackingData)
        }
    }
}
